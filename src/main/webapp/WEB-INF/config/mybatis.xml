<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-4.0.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">


    <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
            <list>
                <value>/WEB-INF/dbconfig.properties</value>
                <value>/WEB-INF/solrConfig.properties</value>
            </list>
        </property>
    </bean>

    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource">
        <property name="driverClassName" value="${driverClassName}"/>
        <property name="url" value="${jdbc_url}"/>
        <property name="username" value="${jdbc_username}"/>
        <property name="password" value="${jdbc_password}"/>
    </bean>
    <!--配置sqlSessionFactory-->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="configLocation" value="/WEB-INF/mybatis-config.xml"/>
        <property name="typeAliasesPackage" value="sdd.bean"></property>
    </bean>
    <!-- 配置扫描器 -->
    <bean id="scannerConfigurer" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!-- 扫描sdd.dao这个包以及它的子包下的所有映射接口类 -->
        <property name="basePackage" value="com.dao"/>
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
    </bean>

    <!--由于采用的是SpringMVC、 MyBatis，故统一采用了标注来声明Service、Controller
由于服务器启动时的加载配置文件的顺序为web.xml root-context.xml(Spring的配置文件) servlet-context.xml(SpringMVC的配置文件)，
由于root-context.xml配置文件中Controller会先进行扫描装配，但是此时service还没有进行事务增强处理，
得到的将是原样的Service（没有经过事务加强处理，故而没有事务处理能力），
所以我们必须在root-context.xml中不扫描Controller-->
    <context:component-scan base-package="com.service">
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>
    <!--注解式事务-->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>
    <!--注解式开发-->
    <tx:annotation-driven transaction-manager="transactionManager"  />

    <!-- resid連接池配置 -->
    <bean id="poolConfig" class="redis.clients.jedis.JedisPoolConfig">
        <property name="maxIdle" value="${redis.maxIdle}"/>
        <property name="maxActive" value="${redis.maxActive}"/>
        <property name="maxWait" value="${redis.maxWait}"/>
        <property name="testOnBorrow" value="${redis.testOnBorrow}"/>
    </bean>

    <bean id="connectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
        <property name="hostName" value="${redis.host}"/>
        <property name="port" value="${redis.port}"/>
        <property name="password" value="${redis.pass}"/>
        <property name="poolConfig" ref="poolConfig"/>
    </bean>
    <bean id="redisTemplate" class="org.springframework.data.redis.core.StringRedisTemplate">
        <property name="connectionFactory" ref="connectionFactory"/>
    </bean>

    <!--配置solr-->
    <!--企业基本信息-->
    <bean id="enterprise_baseSolr" class="org.apache.solr.client.solrj.impl.HttpSolrClient">
        <constructor-arg index="0" value="${enterprise_base_url}"/>
    </bean>
    <!--企业评分-->
    <bean id="enterprise_score" class="org.apache.solr.client.solrj.impl.HttpSolrClient">
        <constructor-arg index="0" value="${enterprise_score}"/>
    </bean>
    <!--详情记录个数-->
    <bean id="company_number_appSolr" class="org.apache.solr.client.solrj.impl.HttpSolrClient">
    <constructor-arg index="0" value="${company_number_app_url}"/>
    </bean>
    <!--股东-->
    <bean id="enterprise_shareholder_personSolr" class="org.apache.solr.client.solrj.impl.HttpSolrClient">
        <constructor-arg index="0" value="${enterprise_shareholder_person_url}"/>
    </bean>
    <!--主要人员-->
    <bean id="enterprise_key_personSolr" class="org.apache.solr.client.solrj.impl.HttpSolrClient">
        <constructor-arg index="0" value="${enterprise_key_person_url}"/>
    </bean>
    <!--变更信息-->
    <bean id="enterprise_change_recordSolr" class="org.apache.solr.client.solrj.impl.HttpSolrClient">
        <constructor-arg index="0" value="${enterprise_change_record_url}"/>
    </bean>
    <!--企业失信信息-->
    <bean id="enterprise_unpromise" class="org.apache.solr.client.solrj.impl.HttpSolrClient">
        <constructor-arg index="0" value="${enterprise_unpromise_person_url}"/>
    </bean>
    <!--企业法院公告-->
    <bean id="enterprise_court_announcementSolr" class="org.apache.solr.client.solrj.impl.HttpSolrClient">
        <constructor-arg index="0" value="${enterprise_court_announcement_url}"/>
    </bean>
    <!--企业裁判文书-->
    <bean id="enterprise_adjudicative_documentSolr" class="org.apache.solr.client.solrj.impl.HttpSolrClient">
        <constructor-arg index="0" value="${enterprise_adjudicative_document_url}"/>
    </bean>
    <!--商标-->
    <bean id="enterprise_brandSolr" class="org.apache.solr.client.solrj.impl.HttpSolrClient">
        <constructor-arg index="0" value="${enterprise_brand_url}"/>
    </bean>
    <!--专利-->
    <bean id="enterprise_patentSolr" class="org.apache.solr.client.solrj.impl.HttpSolrClient">
        <constructor-arg index="0" value="${enterprise_patent_url}"/>
    </bean>
    <!--证书-->
    <bean id="enterprise_certificateSolr" class="org.apache.solr.client.solrj.impl.HttpSolrClient">
        <constructor-arg index="0" value="${enterprise_certificate_url}"/>
    </bean>
    <!--作品著作权-->
    <bean id="enterprise_copyrightSolr" class="org.apache.solr.client.solrj.impl.HttpSolrClient">
        <constructor-arg index="0" value="${enterprise_copyright_url}"/>
    </bean>
    <!--软件著作权-->
    <bean id="enterprise_software_copyrightSolr" class="org.apache.solr.client.solrj.impl.HttpSolrClient">
        <constructor-arg index="0" value="${enterprise_software_copyright_url}"/>
    </bean>
    <bean id="enterprise_annual_report_baseSolr" class="org.apache.solr.client.solrj.impl.HttpSolrClient">
        <constructor-arg index="0" value="${enterprise_annual_report_base_url}"/>
    </bean>
    <!--年报股东及出资信息-->
    <bean id="enterprise_annual_report_shareholderSolr" class="org.apache.solr.client.solrj.impl.HttpSolrClient">
        <constructor-arg index="0" value="${enterprise_annual_report_shareholder_url}"/>
    </bean>
    <!--年报对外投资信息-->
    <bean id="enterprise_annual_report_foreign_investmentSolr" class="org.apache.solr.client.solrj.impl.HttpSolrClient">
        <constructor-arg index="0" value="${enterprise_annual_report_foreign_investment_url}"/>
    </bean>
    <!--年报变更记录-->
    <bean id="enterprise_annual_report_change_recordSolr" class="org.apache.solr.client.solrj.impl.HttpSolrClient">
        <constructor-arg index="0" value="${enterprise_annual_report_change_record_url}"/>
    </bean>
    <!--年报股权变更信息-->
    <bean id="enterprise_annual_report_share_changeSolr" class="org.apache.solr.client.solrj.impl.HttpSolrClient">
        <constructor-arg index="0" value="${enterprise_annual_report_share_change_url}"/>
    </bean>
    <!--对外投资信息-->
    <bean id="enterprise_foreign_investmentSolr" class="org.apache.solr.client.solrj.impl.HttpSolrClient">
        <constructor-arg index="0" value="${enterprise_foreign_investment_url}"/>
    </bean>
    <!--分支机构信息-->
    <bean id="enterprise_affiliateSolr" class="org.apache.solr.client.solrj.impl.HttpSolrClient">
    <constructor-arg index="0" value="${enterprise_affiliate_url}"/>
    </bean>
    <!--创业公司媒体报道-->
    <bean id="startup_newsSolr" class="org.apache.solr.client.solrj.impl.HttpSolrClient">
        <constructor-arg index="0" value="${startup_news_url}"/>
    </bean>
    <!--企业资质：雏鹰计划-->
    <bean id="enterprise_aptitudeSolr1" class="org.apache.solr.client.solrj.impl.HttpSolrClient">
        <constructor-arg index="0" value="${enterprise_aptitude1}"/>
    </bean>
    <!--企业资质：金种子-->
    <bean id="enterprise_aptitudeSolr2" class="org.apache.solr.client.solrj.impl.HttpSolrClient">
        <constructor-arg index="0" value="${enterprise_aptitude2}"/>
    </bean>
    <!--企业资质：高新技术成果转化项目-->
    <bean id="enterprise_aptitudeSolr3" class="org.apache.solr.client.solrj.impl.HttpSolrClient">
        <constructor-arg index="0" value="${enterprise_aptitude3}"/>
    </bean>
    <!--企业资质：科技创新资金-->
    <bean id="enterprise_aptitudeSolr4" class="org.apache.solr.client.solrj.impl.HttpSolrClient">
        <constructor-arg index="0" value="${enterprise_aptitude4}"/>
    </bean>
    <!--企业资质：国高新-->
    <bean id="enterprise_aptitudeSolr5" class="org.apache.solr.client.solrj.impl.HttpSolrClient">
        <constructor-arg index="0" value="${enterprise_aptitude5}"/>
    </bean>
    <!--企业资质：科技服务业促进专项-->
    <bean id="enterprise_aptitudeSolr6" class="org.apache.solr.client.solrj.impl.HttpSolrClient">
        <constructor-arg index="0" value="${enterprise_aptitude6}"/>
    </bean>
    <!--企业资质：中关村高新-->
    <bean id="enterprise_aptitudeSolr7" class="org.apache.solr.client.solrj.impl.HttpSolrClient">
        <constructor-arg index="0" value="${enterprise_aptitude7}"/>
    </bean>
    <!--企业新闻-->
    <bean id="enterprise_newsSolr" class="org.apache.solr.client.solrj.impl.HttpSolrClient">
        <constructor-arg index="0" value="${enterprise_news}"/>
    </bean>
    <bean id="analysisSolr" class="org.apache.solr.client.solrj.impl.HttpSolrClient">
        <constructor-arg index="0" value="${analysis_url}"/>
    </bean>
</beans>